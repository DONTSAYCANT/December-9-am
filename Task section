============================
27-12-21
============================

Study in detail about print
Study in detail about Datatypes in python 
Study in detail about compiler vs interpreter 


=============================
28-12-21
=============================

+ / * - // ** % understand about operators
study about int/float/str/bool inbuilt functions
study about input inbuilt functions


==============================
29-12-21
==============================

#Task1

Data type conversion table
      int    float     str     bool
int
float
str
bool

int to float
int to str
int to bool


#12 pgms  ===> why string is called as global data type



#Task2

write a program to calculate perimeter of the circle with radius (float) 2 * pi * radius
#output in integer in formatted

#Task3: (input: float, output: int)

radius and height as float ,
calculate Area of cone (area of cone = 1/3 * pi * r * r * h) (float)
print output in integer data type and formatted way


==============================
30-12-2021
==============================


#Task1 (collect input fromuser)

write a program to calculate perimeter of the circle with radius (float) 2 * pi * radius
#output in integer in formatted

#Task2: (input: float, output: int) (collect input fromuser)

radius and height as float ,
calculate Area of cone (area of cone = 1/3 * pi * r * r * h) (float)
print output in integer data type and formatted way


#Task3:
String = "Information Technology"

identify chars for index numbers: 10, -10, 12, 3, -5 ,5 0 ,-1 20

#Task4:

Collect one string from user
Identify middle character of string 


========================================
31-12-2021
========================================

"Information technology_world"

print(a[1:5])
print(a[2:-1])
print(a[-5:5])
print(a[-4:-1])
print(a[:5])
print(a[2:])
print(a[2:100])
print(a[:])

print(a[-1:-5])
print(a[-2:0])
print(a[5:1]

print(a[2:-2:1])
print(a[2:-2:2])
print(a[2:-2:3])
print(a[3:10:1])
print(a[3:10:2])
print(a[3:10:5])

print(a[3: :3])
print(a[-5: : 2])
print(a[:4:4])
print(a[::3])

=================================
01-01-2022
=================================


"Information_Technology"

#[-2:0:-1]
#[5:-5:5]
#[-5:5:-5]
#[5:-5:-5]
#[3:9:-1]
#[9:-10:-2]
#[2:-4:-4]
#[-4:2:-2]
#[0:-1:-3]
#[-3:3:6]
#[::-3]
#[::-2]
#[2:-2:-2]
#[2:-2:2]
#[5:-5:5]
#[3:-3:3]
#[::2]
#[::-5]


"python_is_using_interpreter"

#[-2:0:-1]
#[5:-5:5]
#[-5:5:-5]
#[5:-5:-5]
#[3:9:-1]
#[9:-10:-2]
#[2:-4:-4]
#[-4:2:-2]
#[0:-1:-3]
#[-3:3:6]
#[::-3]
#[::-2]
#[2:-2:-2]
#[2:-2:2]
#[5:-5:5]
#[3:-3:3]
#[::2]
#[::-5]



"computer science"

print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])

"Information_technology"


print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])


"Google_chrome_browser"


print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])

Hackerrank pgms:

https://www.hackerrank.com/challenges/py-hello-world/problem?isFullScreen=true
https://www.hackerrank.com/challenges/python-arithmetic-operators/problem?isFullScreen=true
https://www.hackerrank.com/challenges/python-division/problem?isFullScreen=false
https://www.hackerrank.com/challenges/swap-case/problem?isFullScreen=true
https://www.hackerrank.com/challenges/whats-your-name/problem?isFullScreen=true
https://www.hackerrank.com/challenges/python-mutations/problem?isFullScreen=true
https://www.hackerrank.com/challenges/capitalize/problem?isFullScreen=true



https://www.w3schools.com/python/python_ref_string.asp



===========================================
Jan 8 - 2022
==========================================

List

#Create an empty list (two ways)
#Concatenate with [5,6,7,8]
#add 8,9,1,5,6,7,8,1 elements to that list
#Find frequency of 8 (count)
#find the mean of the list
#find sum (List) + min + Max 
#Find median of the list
#remove duplicates from list and give output in the format of tuple

Study: https://www.w3schools.com/python/python_ref_list.asp

Tuple

#Create two tuples (1,4,5,6,7,8) (5,6,7,8,9)
#Find the common elements between two tuples
#Concatenate both tuples and remove duplicates from tuple
#Find the index value of 9 (after concatenation)
#multiply above elements 3 times

 Sets

#Create two empty sets
#update set1 with 7,8,9,1,2,3,4,5,0
#update set2 with 4,5,6,0
#check whether set2 is subset of set1 or no ?
#check whether both have common elements are no ?
#remove 8 from set 1 and set 2 ==> find the inferences
#discard 0 from set1 and set2 
#find collection of both sets ===> set1 and set2

Dictionary:

#create a dictionary
#{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Study: https://www.w3schools.com/python/python_ref_list.asp


==========================
Jan 10 - 2022
==========================

write pgm for each conversion

#list to tuple
#list to set
#tuple to list
#tuple to set
#set to list
#set to tuple

#Lists to dictionary conversion

Task1:

Li1 = [2,3,4,5,[45,56,67,78,[111,222,333,[5555,3333,[10000,50000,"python","computer"],1111,7777,8888],444,555,666,777],89,23,34]]


5
56
222
50000
put
5555
7777
666
89
on
333
3333

Task2


a = [1,2,3,4,[100,101,102,"Computer_science"],200,203]

Extract
#science
#computer

Task3
a = [1,2,3,4,[101,102,103,[201,202,[999]], 666, 777]]

Extract
#666
#201
#102
#999
#777


Task4:

Li1 = [2,3,"python","hello",4,5,0]  

Extract
#ll
#thon

Task5
Li1 = [1,2,3,4,5,[11,22,33,44,55,[111,222,333,444],6666,7777],7777]

Output Prediction 

print(Li1[5][0])
print(Li1[5][6])
print(Li1[5][-2])
print(Li1[5][7])
print(Li1[6])
print(Li1[5][5][1])

print(Li1[-2][-1])


print(Li1[-2][2:4])


Task6:

a = {1: [1,2,3,"python"], 2:{10:"hello",20:"welcome",40: "science"}, 99: {3,4,5,6}, 40:{1:"zoology", 2:"Botany"}}


#py
#ello
#en
#zoo
#Bot



print(a)


#Task1

#hackerrank Write a function

#Task2

#hackerrank Python If-Else

#Task3

#Fizz buzz
#Get one number from user
#5
#Multiple of 3 ==> Fizz
#Multiple of 5 ===> buzz
#Multiple of 3 and 5 ===> Fizzbuzz
#None ==> Invalid number

Task4:

#Get one mark from student
#mark 0 to 100 otherwise invalid mark

#50 + PASS otherwise FAIL
#90 to 100 ===> A 
#80 to 89 ===> B
#70 to 79 ===> C
#60 to 69 ===> D
#50 to 59 ===> E

#0 to 49 ===> FAIL


#93 ===> A
#99 ===> A
#88 ====> B

#78

#VALID MARK (between 0 to 100)
#PASS MARK ()
#C






